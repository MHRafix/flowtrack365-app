/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as AppImport } from './pages/_app'
import { Route as OrganizationsIndexImport } from './pages/organizations/index'
import { Route as AppIndexImport } from './pages/_app/index'
import { Route as OrganizationsCreateOrganizationImport } from './pages/organizations/create-organization'
import { Route as AuthVerifyLoginImport } from './pages/auth/verify-login'
import { Route as AuthRegistrationImport } from './pages/auth/registration'
import { Route as AuthLoginImport } from './pages/auth/login'
import { Route as AppOrganizationsOrgIdTaskManagementIndexImport } from './pages/_app/organizations/$orgId/task-management/index'

// Create Virtual Routes

const AppOrganizationsOrgIdIndexLazyImport = createFileRoute(
  '/_app/organizations/$orgId/',
)()
const AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/organization-settings/plan-features/',
  )()
const AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/organization-settings/members/')()
const AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/organization-settings/general/')()
const AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/organization-settings/api-credentials/',
  )()
const AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/orders-management/pos-sale/')()
const AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/orders-management/all-orders/')()
const AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/inventory-management/units/')()
const AppOrganizationsOrgIdInventoryManagementProductsIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/inventory-management/products/')()
const AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/inventory-management/products-categories/',
  )()
const AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyImport =
  createFileRoute('/_app/organizations/$orgId/inventory-management/brands/')()
const AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/expense-management/expense-categories/',
  )()
const AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/expense-management/all-expenses/',
  )()
const AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/accounts-management/bank-accounts/',
  )()
const AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/accounts-management/adjustments/',
  )()
const AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/accounts-management/statements/$accountId',
  )()
const AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyImport =
  createFileRoute(
    '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId',
  )()

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationsIndexRoute = OrganizationsIndexImport.update({
  id: '/organizations/',
  path: '/organizations/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const OrganizationsCreateOrganizationRoute =
  OrganizationsCreateOrganizationImport.update({
    id: '/organizations/create-organization',
    path: '/organizations/create-organization',
    getParentRoute: () => rootRoute,
  } as any)

const AuthVerifyLoginRoute = AuthVerifyLoginImport.update({
  id: '/auth/verify-login',
  path: '/auth/verify-login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegistrationRoute = AuthRegistrationImport.update({
  id: '/auth/registration',
  path: '/auth/registration',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AppOrganizationsOrgIdIndexLazyRoute =
  AppOrganizationsOrgIdIndexLazyImport.update({
    id: '/organizations/$orgId/',
    path: '/organizations/$orgId/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./pages/_app/organizations/$orgId/index.lazy').then((d) => d.Route),
  )

const AppOrganizationsOrgIdTaskManagementIndexRoute =
  AppOrganizationsOrgIdTaskManagementIndexImport.update({
    id: '/organizations/$orgId/task-management/',
    path: '/organizations/$orgId/task-management/',
    getParentRoute: () => AppRoute,
  } as any)

const AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyImport.update({
    id: '/organizations/$orgId/organization-settings/plan-features/',
    path: '/organizations/$orgId/organization-settings/plan-features/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/plan-features/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyImport.update({
    id: '/organizations/$orgId/organization-settings/members/',
    path: '/organizations/$orgId/organization-settings/members/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/members/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyImport.update({
    id: '/organizations/$orgId/organization-settings/general/',
    path: '/organizations/$orgId/organization-settings/general/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/general/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyImport.update(
    {
      id: '/organizations/$orgId/organization-settings/api-credentials/',
      path: '/organizations/$orgId/organization-settings/api-credentials/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/api-credentials/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute =
  AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyImport.update({
    id: '/organizations/$orgId/orders-management/pos-sale/',
    path: '/organizations/$orgId/orders-management/pos-sale/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/orders-management/pos-sale/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute =
  AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyImport.update({
    id: '/organizations/$orgId/orders-management/all-orders/',
    path: '/organizations/$orgId/orders-management/all-orders/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/orders-management/all-orders/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyImport.update({
    id: '/organizations/$orgId/inventory-management/units/',
    path: '/organizations/$orgId/inventory-management/units/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/units/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementProductsIndexLazyImport.update({
    id: '/organizations/$orgId/inventory-management/products/',
    path: '/organizations/$orgId/inventory-management/products/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/products/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyImport.update(
    {
      id: '/organizations/$orgId/inventory-management/products-categories/',
      path: '/organizations/$orgId/inventory-management/products-categories/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/products-categories/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyImport.update({
    id: '/organizations/$orgId/inventory-management/brands/',
    path: '/organizations/$orgId/inventory-management/brands/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/brands/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute =
  AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyImport.update(
    {
      id: '/organizations/$orgId/expense-management/expense-categories/',
      path: '/organizations/$orgId/expense-management/expense-categories/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/expense-management/expense-categories/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute =
  AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyImport.update({
    id: '/organizations/$orgId/expense-management/all-expenses/',
    path: '/organizations/$orgId/expense-management/all-expenses/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/expense-management/all-expenses/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute =
  AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyImport.update({
    id: '/organizations/$orgId/accounts-management/bank-accounts/',
    path: '/organizations/$orgId/accounts-management/bank-accounts/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/accounts-management/bank-accounts/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute =
  AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyImport.update({
    id: '/organizations/$orgId/accounts-management/adjustments/',
    path: '/organizations/$orgId/accounts-management/adjustments/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/accounts-management/adjustments/index.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute =
  AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyImport.update({
    id: '/organizations/$orgId/accounts-management/statements/$accountId',
    path: '/organizations/$orgId/accounts-management/statements/$accountId',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/accounts-management/statements/$accountId.lazy'
    ).then((d) => d.Route),
  )

const AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute =
  AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyImport.update(
    {
      id: '/organizations/$orgId/inventory-management/products/product-edit/$productId',
      path: '/organizations/$orgId/inventory-management/products/product-edit/$productId',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/products/product-edit/$productId.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/registration': {
      id: '/auth/registration'
      path: '/auth/registration'
      fullPath: '/auth/registration'
      preLoaderRoute: typeof AuthRegistrationImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-login': {
      id: '/auth/verify-login'
      path: '/auth/verify-login'
      fullPath: '/auth/verify-login'
      preLoaderRoute: typeof AuthVerifyLoginImport
      parentRoute: typeof rootRoute
    }
    '/organizations/create-organization': {
      id: '/organizations/create-organization'
      path: '/organizations/create-organization'
      fullPath: '/organizations/create-organization'
      preLoaderRoute: typeof OrganizationsCreateOrganizationImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/organizations/': {
      id: '/organizations/'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof OrganizationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/_app/organizations/$orgId/': {
      id: '/_app/organizations/$orgId/'
      path: '/organizations/$orgId'
      fullPath: '/organizations/$orgId'
      preLoaderRoute: typeof AppOrganizationsOrgIdIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/task-management/': {
      id: '/_app/organizations/$orgId/task-management/'
      path: '/organizations/$orgId/task-management'
      fullPath: '/organizations/$orgId/task-management'
      preLoaderRoute: typeof AppOrganizationsOrgIdTaskManagementIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/accounts-management/statements/$accountId': {
      id: '/_app/organizations/$orgId/accounts-management/statements/$accountId'
      path: '/organizations/$orgId/accounts-management/statements/$accountId'
      fullPath: '/organizations/$orgId/accounts-management/statements/$accountId'
      preLoaderRoute: typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/accounts-management/adjustments/': {
      id: '/_app/organizations/$orgId/accounts-management/adjustments/'
      path: '/organizations/$orgId/accounts-management/adjustments'
      fullPath: '/organizations/$orgId/accounts-management/adjustments'
      preLoaderRoute: typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/accounts-management/bank-accounts/': {
      id: '/_app/organizations/$orgId/accounts-management/bank-accounts/'
      path: '/organizations/$orgId/accounts-management/bank-accounts'
      fullPath: '/organizations/$orgId/accounts-management/bank-accounts'
      preLoaderRoute: typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/expense-management/all-expenses/': {
      id: '/_app/organizations/$orgId/expense-management/all-expenses/'
      path: '/organizations/$orgId/expense-management/all-expenses'
      fullPath: '/organizations/$orgId/expense-management/all-expenses'
      preLoaderRoute: typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/expense-management/expense-categories/': {
      id: '/_app/organizations/$orgId/expense-management/expense-categories/'
      path: '/organizations/$orgId/expense-management/expense-categories'
      fullPath: '/organizations/$orgId/expense-management/expense-categories'
      preLoaderRoute: typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/inventory-management/brands/': {
      id: '/_app/organizations/$orgId/inventory-management/brands/'
      path: '/organizations/$orgId/inventory-management/brands'
      fullPath: '/organizations/$orgId/inventory-management/brands'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/inventory-management/products-categories/': {
      id: '/_app/organizations/$orgId/inventory-management/products-categories/'
      path: '/organizations/$orgId/inventory-management/products-categories'
      fullPath: '/organizations/$orgId/inventory-management/products-categories'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/inventory-management/products/': {
      id: '/_app/organizations/$orgId/inventory-management/products/'
      path: '/organizations/$orgId/inventory-management/products'
      fullPath: '/organizations/$orgId/inventory-management/products'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/inventory-management/units/': {
      id: '/_app/organizations/$orgId/inventory-management/units/'
      path: '/organizations/$orgId/inventory-management/units'
      fullPath: '/organizations/$orgId/inventory-management/units'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/orders-management/all-orders/': {
      id: '/_app/organizations/$orgId/orders-management/all-orders/'
      path: '/organizations/$orgId/orders-management/all-orders'
      fullPath: '/organizations/$orgId/orders-management/all-orders'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/orders-management/pos-sale/': {
      id: '/_app/organizations/$orgId/orders-management/pos-sale/'
      path: '/organizations/$orgId/orders-management/pos-sale'
      fullPath: '/organizations/$orgId/orders-management/pos-sale'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/organization-settings/api-credentials/': {
      id: '/_app/organizations/$orgId/organization-settings/api-credentials/'
      path: '/organizations/$orgId/organization-settings/api-credentials'
      fullPath: '/organizations/$orgId/organization-settings/api-credentials'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/organization-settings/general/': {
      id: '/_app/organizations/$orgId/organization-settings/general/'
      path: '/organizations/$orgId/organization-settings/general'
      fullPath: '/organizations/$orgId/organization-settings/general'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/organization-settings/members/': {
      id: '/_app/organizations/$orgId/organization-settings/members/'
      path: '/organizations/$orgId/organization-settings/members'
      fullPath: '/organizations/$orgId/organization-settings/members'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/organization-settings/plan-features/': {
      id: '/_app/organizations/$orgId/organization-settings/plan-features/'
      path: '/organizations/$orgId/organization-settings/plan-features'
      fullPath: '/organizations/$orgId/organization-settings/plan-features'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId': {
      id: '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId'
      path: '/organizations/$orgId/inventory-management/products/product-edit/$productId'
      fullPath: '/organizations/$orgId/inventory-management/products/product-edit/$productId'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppOrganizationsOrgIdIndexLazyRoute: typeof AppOrganizationsOrgIdIndexLazyRoute
  AppOrganizationsOrgIdTaskManagementIndexRoute: typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute: typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute: typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute: typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute: typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute: typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute: typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute: typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppOrganizationsOrgIdIndexLazyRoute: AppOrganizationsOrgIdIndexLazyRoute,
  AppOrganizationsOrgIdTaskManagementIndexRoute:
    AppOrganizationsOrgIdTaskManagementIndexRoute,
  AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute:
    AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute,
  AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute:
    AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute,
  AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute:
    AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute,
  AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute:
    AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute,
  AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute:
    AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute,
  AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute:
    AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute,
  AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute:
    AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute:
    AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/registration': typeof AuthRegistrationRoute
  '/auth/verify-login': typeof AuthVerifyLoginRoute
  '/organizations/create-organization': typeof OrganizationsCreateOrganizationRoute
  '/': typeof AppIndexRoute
  '/organizations': typeof OrganizationsIndexRoute
  '/organizations/$orgId': typeof AppOrganizationsOrgIdIndexLazyRoute
  '/organizations/$orgId/task-management': typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  '/organizations/$orgId/accounts-management/statements/$accountId': typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  '/organizations/$orgId/accounts-management/adjustments': typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  '/organizations/$orgId/accounts-management/bank-accounts': typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  '/organizations/$orgId/expense-management/all-expenses': typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  '/organizations/$orgId/expense-management/expense-categories': typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/brands': typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  '/organizations/$orgId/inventory-management/products-categories': typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products': typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  '/organizations/$orgId/inventory-management/units': typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  '/organizations/$orgId/orders-management/all-orders': typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  '/organizations/$orgId/orders-management/pos-sale': typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  '/organizations/$orgId/organization-settings/api-credentials': typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  '/organizations/$orgId/organization-settings/general': typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  '/organizations/$orgId/organization-settings/members': typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  '/organizations/$orgId/organization-settings/plan-features': typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products/product-edit/$productId': typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}

export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/registration': typeof AuthRegistrationRoute
  '/auth/verify-login': typeof AuthVerifyLoginRoute
  '/organizations/create-organization': typeof OrganizationsCreateOrganizationRoute
  '/': typeof AppIndexRoute
  '/organizations': typeof OrganizationsIndexRoute
  '/organizations/$orgId': typeof AppOrganizationsOrgIdIndexLazyRoute
  '/organizations/$orgId/task-management': typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  '/organizations/$orgId/accounts-management/statements/$accountId': typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  '/organizations/$orgId/accounts-management/adjustments': typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  '/organizations/$orgId/accounts-management/bank-accounts': typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  '/organizations/$orgId/expense-management/all-expenses': typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  '/organizations/$orgId/expense-management/expense-categories': typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/brands': typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  '/organizations/$orgId/inventory-management/products-categories': typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products': typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  '/organizations/$orgId/inventory-management/units': typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  '/organizations/$orgId/orders-management/all-orders': typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  '/organizations/$orgId/orders-management/pos-sale': typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  '/organizations/$orgId/organization-settings/api-credentials': typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  '/organizations/$orgId/organization-settings/general': typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  '/organizations/$orgId/organization-settings/members': typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  '/organizations/$orgId/organization-settings/plan-features': typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products/product-edit/$productId': typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/registration': typeof AuthRegistrationRoute
  '/auth/verify-login': typeof AuthVerifyLoginRoute
  '/organizations/create-organization': typeof OrganizationsCreateOrganizationRoute
  '/_app/': typeof AppIndexRoute
  '/organizations/': typeof OrganizationsIndexRoute
  '/_app/organizations/$orgId/': typeof AppOrganizationsOrgIdIndexLazyRoute
  '/_app/organizations/$orgId/task-management/': typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  '/_app/organizations/$orgId/accounts-management/statements/$accountId': typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  '/_app/organizations/$orgId/accounts-management/adjustments/': typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  '/_app/organizations/$orgId/accounts-management/bank-accounts/': typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  '/_app/organizations/$orgId/expense-management/all-expenses/': typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  '/_app/organizations/$orgId/expense-management/expense-categories/': typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/brands/': typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/products-categories/': typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/products/': typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/units/': typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  '/_app/organizations/$orgId/orders-management/all-orders/': typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  '/_app/organizations/$orgId/orders-management/pos-sale/': typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/api-credentials/': typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/general/': typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/members/': typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/plan-features/': typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId': typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth/login'
    | '/auth/registration'
    | '/auth/verify-login'
    | '/organizations/create-organization'
    | '/'
    | '/organizations'
    | '/organizations/$orgId'
    | '/organizations/$orgId/task-management'
    | '/organizations/$orgId/accounts-management/statements/$accountId'
    | '/organizations/$orgId/accounts-management/adjustments'
    | '/organizations/$orgId/accounts-management/bank-accounts'
    | '/organizations/$orgId/expense-management/all-expenses'
    | '/organizations/$orgId/expense-management/expense-categories'
    | '/organizations/$orgId/inventory-management/brands'
    | '/organizations/$orgId/inventory-management/products-categories'
    | '/organizations/$orgId/inventory-management/products'
    | '/organizations/$orgId/inventory-management/units'
    | '/organizations/$orgId/orders-management/all-orders'
    | '/organizations/$orgId/orders-management/pos-sale'
    | '/organizations/$orgId/organization-settings/api-credentials'
    | '/organizations/$orgId/organization-settings/general'
    | '/organizations/$orgId/organization-settings/members'
    | '/organizations/$orgId/organization-settings/plan-features'
    | '/organizations/$orgId/inventory-management/products/product-edit/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/login'
    | '/auth/registration'
    | '/auth/verify-login'
    | '/organizations/create-organization'
    | '/'
    | '/organizations'
    | '/organizations/$orgId'
    | '/organizations/$orgId/task-management'
    | '/organizations/$orgId/accounts-management/statements/$accountId'
    | '/organizations/$orgId/accounts-management/adjustments'
    | '/organizations/$orgId/accounts-management/bank-accounts'
    | '/organizations/$orgId/expense-management/all-expenses'
    | '/organizations/$orgId/expense-management/expense-categories'
    | '/organizations/$orgId/inventory-management/brands'
    | '/organizations/$orgId/inventory-management/products-categories'
    | '/organizations/$orgId/inventory-management/products'
    | '/organizations/$orgId/inventory-management/units'
    | '/organizations/$orgId/orders-management/all-orders'
    | '/organizations/$orgId/orders-management/pos-sale'
    | '/organizations/$orgId/organization-settings/api-credentials'
    | '/organizations/$orgId/organization-settings/general'
    | '/organizations/$orgId/organization-settings/members'
    | '/organizations/$orgId/organization-settings/plan-features'
    | '/organizations/$orgId/inventory-management/products/product-edit/$productId'
  id:
    | '__root__'
    | '/_app'
    | '/auth/login'
    | '/auth/registration'
    | '/auth/verify-login'
    | '/organizations/create-organization'
    | '/_app/'
    | '/organizations/'
    | '/_app/organizations/$orgId/'
    | '/_app/organizations/$orgId/task-management/'
    | '/_app/organizations/$orgId/accounts-management/statements/$accountId'
    | '/_app/organizations/$orgId/accounts-management/adjustments/'
    | '/_app/organizations/$orgId/accounts-management/bank-accounts/'
    | '/_app/organizations/$orgId/expense-management/all-expenses/'
    | '/_app/organizations/$orgId/expense-management/expense-categories/'
    | '/_app/organizations/$orgId/inventory-management/brands/'
    | '/_app/organizations/$orgId/inventory-management/products-categories/'
    | '/_app/organizations/$orgId/inventory-management/products/'
    | '/_app/organizations/$orgId/inventory-management/units/'
    | '/_app/organizations/$orgId/orders-management/all-orders/'
    | '/_app/organizations/$orgId/orders-management/pos-sale/'
    | '/_app/organizations/$orgId/organization-settings/api-credentials/'
    | '/_app/organizations/$orgId/organization-settings/general/'
    | '/_app/organizations/$orgId/organization-settings/members/'
    | '/_app/organizations/$orgId/organization-settings/plan-features/'
    | '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegistrationRoute: typeof AuthRegistrationRoute
  AuthVerifyLoginRoute: typeof AuthVerifyLoginRoute
  OrganizationsCreateOrganizationRoute: typeof OrganizationsCreateOrganizationRoute
  OrganizationsIndexRoute: typeof OrganizationsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegistrationRoute: AuthRegistrationRoute,
  AuthVerifyLoginRoute: AuthVerifyLoginRoute,
  OrganizationsCreateOrganizationRoute: OrganizationsCreateOrganizationRoute,
  OrganizationsIndexRoute: OrganizationsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/auth/login",
        "/auth/registration",
        "/auth/verify-login",
        "/organizations/create-organization",
        "/organizations/"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/organizations/$orgId/",
        "/_app/organizations/$orgId/task-management/",
        "/_app/organizations/$orgId/accounts-management/statements/$accountId",
        "/_app/organizations/$orgId/accounts-management/adjustments/",
        "/_app/organizations/$orgId/accounts-management/bank-accounts/",
        "/_app/organizations/$orgId/expense-management/all-expenses/",
        "/_app/organizations/$orgId/expense-management/expense-categories/",
        "/_app/organizations/$orgId/inventory-management/brands/",
        "/_app/organizations/$orgId/inventory-management/products-categories/",
        "/_app/organizations/$orgId/inventory-management/products/",
        "/_app/organizations/$orgId/inventory-management/units/",
        "/_app/organizations/$orgId/orders-management/all-orders/",
        "/_app/organizations/$orgId/orders-management/pos-sale/",
        "/_app/organizations/$orgId/organization-settings/api-credentials/",
        "/_app/organizations/$orgId/organization-settings/general/",
        "/_app/organizations/$orgId/organization-settings/members/",
        "/_app/organizations/$orgId/organization-settings/plan-features/",
        "/_app/organizations/$orgId/inventory-management/products/product-edit/$productId"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/registration": {
      "filePath": "auth/registration.tsx"
    },
    "/auth/verify-login": {
      "filePath": "auth/verify-login.tsx"
    },
    "/organizations/create-organization": {
      "filePath": "organizations/create-organization.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/organizations/": {
      "filePath": "organizations/index.tsx"
    },
    "/_app/organizations/$orgId/": {
      "filePath": "_app/organizations/$orgId/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/task-management/": {
      "filePath": "_app/organizations/$orgId/task-management/index.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/accounts-management/statements/$accountId": {
      "filePath": "_app/organizations/$orgId/accounts-management/statements/$accountId.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/accounts-management/adjustments/": {
      "filePath": "_app/organizations/$orgId/accounts-management/adjustments/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/accounts-management/bank-accounts/": {
      "filePath": "_app/organizations/$orgId/accounts-management/bank-accounts/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/expense-management/all-expenses/": {
      "filePath": "_app/organizations/$orgId/expense-management/all-expenses/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/expense-management/expense-categories/": {
      "filePath": "_app/organizations/$orgId/expense-management/expense-categories/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/inventory-management/brands/": {
      "filePath": "_app/organizations/$orgId/inventory-management/brands/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/inventory-management/products-categories/": {
      "filePath": "_app/organizations/$orgId/inventory-management/products-categories/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/inventory-management/products/": {
      "filePath": "_app/organizations/$orgId/inventory-management/products/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/inventory-management/units/": {
      "filePath": "_app/organizations/$orgId/inventory-management/units/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/orders-management/all-orders/": {
      "filePath": "_app/organizations/$orgId/orders-management/all-orders/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/orders-management/pos-sale/": {
      "filePath": "_app/organizations/$orgId/orders-management/pos-sale/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/organization-settings/api-credentials/": {
      "filePath": "_app/organizations/$orgId/organization-settings/api-credentials/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/organization-settings/general/": {
      "filePath": "_app/organizations/$orgId/organization-settings/general/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/organization-settings/members/": {
      "filePath": "_app/organizations/$orgId/organization-settings/members/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/organization-settings/plan-features/": {
      "filePath": "_app/organizations/$orgId/organization-settings/plan-features/index.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/organizations/$orgId/inventory-management/products/product-edit/$productId": {
      "filePath": "_app/organizations/$orgId/inventory-management/products/product-edit/$productId.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
