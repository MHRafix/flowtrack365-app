/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './pages/__root'
import { Route as AppRouteImport } from './pages/_app'
import { Route as OrganizationsIndexRouteImport } from './pages/organizations/index'
import { Route as AppIndexRouteImport } from './pages/_app/index'
import { Route as OrganizationsCreateOrganizationRouteImport } from './pages/organizations/create-organization'
import { Route as AuthVerifyLoginRouteImport } from './pages/auth/verify-login'
import { Route as AuthRegistrationRouteImport } from './pages/auth/registration'
import { Route as AuthLoginRouteImport } from './pages/auth/login'
import { Route as AppOrganizationsOrgIdTaskManagementIndexRouteImport } from './pages/_app/organizations/$orgId/task-management/index'

const AppOrganizationsOrgIdIndexLazyRouteImport = createFileRoute(
  '/_app/organizations/$orgId/',
)()
const AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/organization-settings/plan-features/',
  )()
const AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/organization-settings/members/')()
const AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/organization-settings/general/')()
const AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/organization-settings/api-credentials/',
  )()
const AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/orders-management/pos-sale/')()
const AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/orders-management/all-orders/')()
const AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/inventory-management/units/')()
const AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/inventory-management/products/')()
const AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/inventory-management/products-categories/',
  )()
const AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRouteImport =
  createFileRoute('/_app/organizations/$orgId/inventory-management/brands/')()
const AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/expense-management/expense-categories/',
  )()
const AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/expense-management/all-expenses/',
  )()
const AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/accounts-management/bank-accounts/',
  )()
const AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/accounts-management/adjustments/',
  )()
const AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/accounts-management/statements/$accountId',
  )()
const AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRouteImport =
  createFileRoute(
    '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId',
  )()

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const OrganizationsIndexRoute = OrganizationsIndexRouteImport.update({
  id: '/organizations/',
  path: '/organizations/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const OrganizationsCreateOrganizationRoute =
  OrganizationsCreateOrganizationRouteImport.update({
    id: '/organizations/create-organization',
    path: '/organizations/create-organization',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthVerifyLoginRoute = AuthVerifyLoginRouteImport.update({
  id: '/auth/verify-login',
  path: '/auth/verify-login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegistrationRoute = AuthRegistrationRouteImport.update({
  id: '/auth/registration',
  path: '/auth/registration',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppOrganizationsOrgIdIndexLazyRoute =
  AppOrganizationsOrgIdIndexLazyRouteImport.update({
    id: '/organizations/$orgId/',
    path: '/organizations/$orgId/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./pages/_app/organizations/$orgId/index.lazy').then((d) => d.Route),
  )
const AppOrganizationsOrgIdTaskManagementIndexRoute =
  AppOrganizationsOrgIdTaskManagementIndexRouteImport.update({
    id: '/organizations/$orgId/task-management/',
    path: '/organizations/$orgId/task-management/',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRouteImport.update(
    {
      id: '/organizations/$orgId/organization-settings/plan-features/',
      path: '/organizations/$orgId/organization-settings/plan-features/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/plan-features/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRouteImport.update({
    id: '/organizations/$orgId/organization-settings/members/',
    path: '/organizations/$orgId/organization-settings/members/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/members/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRouteImport.update({
    id: '/organizations/$orgId/organization-settings/general/',
    path: '/organizations/$orgId/organization-settings/general/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/general/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute =
  AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRouteImport.update(
    {
      id: '/organizations/$orgId/organization-settings/api-credentials/',
      path: '/organizations/$orgId/organization-settings/api-credentials/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/organization-settings/api-credentials/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute =
  AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRouteImport.update({
    id: '/organizations/$orgId/orders-management/pos-sale/',
    path: '/organizations/$orgId/orders-management/pos-sale/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/orders-management/pos-sale/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute =
  AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRouteImport.update({
    id: '/organizations/$orgId/orders-management/all-orders/',
    path: '/organizations/$orgId/orders-management/all-orders/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/orders-management/all-orders/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRouteImport.update({
    id: '/organizations/$orgId/inventory-management/units/',
    path: '/organizations/$orgId/inventory-management/units/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/units/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRouteImport.update({
    id: '/organizations/$orgId/inventory-management/products/',
    path: '/organizations/$orgId/inventory-management/products/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/products/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRouteImport.update(
    {
      id: '/organizations/$orgId/inventory-management/products-categories/',
      path: '/organizations/$orgId/inventory-management/products-categories/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/products-categories/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute =
  AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRouteImport.update({
    id: '/organizations/$orgId/inventory-management/brands/',
    path: '/organizations/$orgId/inventory-management/brands/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/brands/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute =
  AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRouteImport.update(
    {
      id: '/organizations/$orgId/expense-management/expense-categories/',
      path: '/organizations/$orgId/expense-management/expense-categories/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/expense-management/expense-categories/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute =
  AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRouteImport.update({
    id: '/organizations/$orgId/expense-management/all-expenses/',
    path: '/organizations/$orgId/expense-management/all-expenses/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/expense-management/all-expenses/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute =
  AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRouteImport.update(
    {
      id: '/organizations/$orgId/accounts-management/bank-accounts/',
      path: '/organizations/$orgId/accounts-management/bank-accounts/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/accounts-management/bank-accounts/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute =
  AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRouteImport.update(
    {
      id: '/organizations/$orgId/accounts-management/adjustments/',
      path: '/organizations/$orgId/accounts-management/adjustments/',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/accounts-management/adjustments/index.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute =
  AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRouteImport.update(
    {
      id: '/organizations/$orgId/accounts-management/statements/$accountId',
      path: '/organizations/$orgId/accounts-management/statements/$accountId',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/accounts-management/statements/$accountId.lazy'
    ).then((d) => d.Route),
  )
const AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute =
  AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRouteImport.update(
    {
      id: '/organizations/$orgId/inventory-management/products/product-edit/$productId',
      path: '/organizations/$orgId/inventory-management/products/product-edit/$productId',
      getParentRoute: () => AppRoute,
    } as any,
  ).lazy(() =>
    import(
      './pages/_app/organizations/$orgId/inventory-management/products/product-edit/$productId.lazy'
    ).then((d) => d.Route),
  )

export interface FileRoutesByFullPath {
  '/auth/login': typeof AuthLoginRoute
  '/auth/registration': typeof AuthRegistrationRoute
  '/auth/verify-login': typeof AuthVerifyLoginRoute
  '/organizations/create-organization': typeof OrganizationsCreateOrganizationRoute
  '/': typeof AppIndexRoute
  '/organizations': typeof OrganizationsIndexRoute
  '/organizations/$orgId': typeof AppOrganizationsOrgIdIndexLazyRoute
  '/organizations/$orgId/task-management': typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  '/organizations/$orgId/accounts-management/statements/$accountId': typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  '/organizations/$orgId/accounts-management/adjustments': typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  '/organizations/$orgId/accounts-management/bank-accounts': typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  '/organizations/$orgId/expense-management/all-expenses': typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  '/organizations/$orgId/expense-management/expense-categories': typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/brands': typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  '/organizations/$orgId/inventory-management/products-categories': typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products': typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  '/organizations/$orgId/inventory-management/units': typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  '/organizations/$orgId/orders-management/all-orders': typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  '/organizations/$orgId/orders-management/pos-sale': typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  '/organizations/$orgId/organization-settings/api-credentials': typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  '/organizations/$orgId/organization-settings/general': typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  '/organizations/$orgId/organization-settings/members': typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  '/organizations/$orgId/organization-settings/plan-features': typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products/product-edit/$productId': typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}
export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/registration': typeof AuthRegistrationRoute
  '/auth/verify-login': typeof AuthVerifyLoginRoute
  '/organizations/create-organization': typeof OrganizationsCreateOrganizationRoute
  '/': typeof AppIndexRoute
  '/organizations': typeof OrganizationsIndexRoute
  '/organizations/$orgId': typeof AppOrganizationsOrgIdIndexLazyRoute
  '/organizations/$orgId/task-management': typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  '/organizations/$orgId/accounts-management/statements/$accountId': typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  '/organizations/$orgId/accounts-management/adjustments': typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  '/organizations/$orgId/accounts-management/bank-accounts': typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  '/organizations/$orgId/expense-management/all-expenses': typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  '/organizations/$orgId/expense-management/expense-categories': typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/brands': typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  '/organizations/$orgId/inventory-management/products-categories': typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products': typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  '/organizations/$orgId/inventory-management/units': typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  '/organizations/$orgId/orders-management/all-orders': typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  '/organizations/$orgId/orders-management/pos-sale': typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  '/organizations/$orgId/organization-settings/api-credentials': typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  '/organizations/$orgId/organization-settings/general': typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  '/organizations/$orgId/organization-settings/members': typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  '/organizations/$orgId/organization-settings/plan-features': typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  '/organizations/$orgId/inventory-management/products/product-edit/$productId': typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/registration': typeof AuthRegistrationRoute
  '/auth/verify-login': typeof AuthVerifyLoginRoute
  '/organizations/create-organization': typeof OrganizationsCreateOrganizationRoute
  '/_app/': typeof AppIndexRoute
  '/organizations/': typeof OrganizationsIndexRoute
  '/_app/organizations/$orgId/': typeof AppOrganizationsOrgIdIndexLazyRoute
  '/_app/organizations/$orgId/task-management/': typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  '/_app/organizations/$orgId/accounts-management/statements/$accountId': typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  '/_app/organizations/$orgId/accounts-management/adjustments/': typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  '/_app/organizations/$orgId/accounts-management/bank-accounts/': typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  '/_app/organizations/$orgId/expense-management/all-expenses/': typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  '/_app/organizations/$orgId/expense-management/expense-categories/': typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/brands/': typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/products-categories/': typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/products/': typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/units/': typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  '/_app/organizations/$orgId/orders-management/all-orders/': typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  '/_app/organizations/$orgId/orders-management/pos-sale/': typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/api-credentials/': typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/general/': typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/members/': typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  '/_app/organizations/$orgId/organization-settings/plan-features/': typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId': typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth/login'
    | '/auth/registration'
    | '/auth/verify-login'
    | '/organizations/create-organization'
    | '/'
    | '/organizations'
    | '/organizations/$orgId'
    | '/organizations/$orgId/task-management'
    | '/organizations/$orgId/accounts-management/statements/$accountId'
    | '/organizations/$orgId/accounts-management/adjustments'
    | '/organizations/$orgId/accounts-management/bank-accounts'
    | '/organizations/$orgId/expense-management/all-expenses'
    | '/organizations/$orgId/expense-management/expense-categories'
    | '/organizations/$orgId/inventory-management/brands'
    | '/organizations/$orgId/inventory-management/products-categories'
    | '/organizations/$orgId/inventory-management/products'
    | '/organizations/$orgId/inventory-management/units'
    | '/organizations/$orgId/orders-management/all-orders'
    | '/organizations/$orgId/orders-management/pos-sale'
    | '/organizations/$orgId/organization-settings/api-credentials'
    | '/organizations/$orgId/organization-settings/general'
    | '/organizations/$orgId/organization-settings/members'
    | '/organizations/$orgId/organization-settings/plan-features'
    | '/organizations/$orgId/inventory-management/products/product-edit/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/login'
    | '/auth/registration'
    | '/auth/verify-login'
    | '/organizations/create-organization'
    | '/'
    | '/organizations'
    | '/organizations/$orgId'
    | '/organizations/$orgId/task-management'
    | '/organizations/$orgId/accounts-management/statements/$accountId'
    | '/organizations/$orgId/accounts-management/adjustments'
    | '/organizations/$orgId/accounts-management/bank-accounts'
    | '/organizations/$orgId/expense-management/all-expenses'
    | '/organizations/$orgId/expense-management/expense-categories'
    | '/organizations/$orgId/inventory-management/brands'
    | '/organizations/$orgId/inventory-management/products-categories'
    | '/organizations/$orgId/inventory-management/products'
    | '/organizations/$orgId/inventory-management/units'
    | '/organizations/$orgId/orders-management/all-orders'
    | '/organizations/$orgId/orders-management/pos-sale'
    | '/organizations/$orgId/organization-settings/api-credentials'
    | '/organizations/$orgId/organization-settings/general'
    | '/organizations/$orgId/organization-settings/members'
    | '/organizations/$orgId/organization-settings/plan-features'
    | '/organizations/$orgId/inventory-management/products/product-edit/$productId'
  id:
    | '__root__'
    | '/_app'
    | '/auth/login'
    | '/auth/registration'
    | '/auth/verify-login'
    | '/organizations/create-organization'
    | '/_app/'
    | '/organizations/'
    | '/_app/organizations/$orgId/'
    | '/_app/organizations/$orgId/task-management/'
    | '/_app/organizations/$orgId/accounts-management/statements/$accountId'
    | '/_app/organizations/$orgId/accounts-management/adjustments/'
    | '/_app/organizations/$orgId/accounts-management/bank-accounts/'
    | '/_app/organizations/$orgId/expense-management/all-expenses/'
    | '/_app/organizations/$orgId/expense-management/expense-categories/'
    | '/_app/organizations/$orgId/inventory-management/brands/'
    | '/_app/organizations/$orgId/inventory-management/products-categories/'
    | '/_app/organizations/$orgId/inventory-management/products/'
    | '/_app/organizations/$orgId/inventory-management/units/'
    | '/_app/organizations/$orgId/orders-management/all-orders/'
    | '/_app/organizations/$orgId/orders-management/pos-sale/'
    | '/_app/organizations/$orgId/organization-settings/api-credentials/'
    | '/_app/organizations/$orgId/organization-settings/general/'
    | '/_app/organizations/$orgId/organization-settings/members/'
    | '/_app/organizations/$orgId/organization-settings/plan-features/'
    | '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegistrationRoute: typeof AuthRegistrationRoute
  AuthVerifyLoginRoute: typeof AuthVerifyLoginRoute
  OrganizationsCreateOrganizationRoute: typeof OrganizationsCreateOrganizationRoute
  OrganizationsIndexRoute: typeof OrganizationsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/organizations/': {
      id: '/organizations/'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof OrganizationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/organizations/create-organization': {
      id: '/organizations/create-organization'
      path: '/organizations/create-organization'
      fullPath: '/organizations/create-organization'
      preLoaderRoute: typeof OrganizationsCreateOrganizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-login': {
      id: '/auth/verify-login'
      path: '/auth/verify-login'
      fullPath: '/auth/verify-login'
      preLoaderRoute: typeof AuthVerifyLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/registration': {
      id: '/auth/registration'
      path: '/auth/registration'
      fullPath: '/auth/registration'
      preLoaderRoute: typeof AuthRegistrationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/organizations/$orgId/': {
      id: '/_app/organizations/$orgId/'
      path: '/organizations/$orgId'
      fullPath: '/organizations/$orgId'
      preLoaderRoute: typeof AppOrganizationsOrgIdIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/task-management/': {
      id: '/_app/organizations/$orgId/task-management/'
      path: '/organizations/$orgId/task-management'
      fullPath: '/organizations/$orgId/task-management'
      preLoaderRoute: typeof AppOrganizationsOrgIdTaskManagementIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/organization-settings/plan-features/': {
      id: '/_app/organizations/$orgId/organization-settings/plan-features/'
      path: '/organizations/$orgId/organization-settings/plan-features'
      fullPath: '/organizations/$orgId/organization-settings/plan-features'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/organization-settings/members/': {
      id: '/_app/organizations/$orgId/organization-settings/members/'
      path: '/organizations/$orgId/organization-settings/members'
      fullPath: '/organizations/$orgId/organization-settings/members'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/organization-settings/general/': {
      id: '/_app/organizations/$orgId/organization-settings/general/'
      path: '/organizations/$orgId/organization-settings/general'
      fullPath: '/organizations/$orgId/organization-settings/general'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/organization-settings/api-credentials/': {
      id: '/_app/organizations/$orgId/organization-settings/api-credentials/'
      path: '/organizations/$orgId/organization-settings/api-credentials'
      fullPath: '/organizations/$orgId/organization-settings/api-credentials'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/orders-management/pos-sale/': {
      id: '/_app/organizations/$orgId/orders-management/pos-sale/'
      path: '/organizations/$orgId/orders-management/pos-sale'
      fullPath: '/organizations/$orgId/orders-management/pos-sale'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/orders-management/all-orders/': {
      id: '/_app/organizations/$orgId/orders-management/all-orders/'
      path: '/organizations/$orgId/orders-management/all-orders'
      fullPath: '/organizations/$orgId/orders-management/all-orders'
      preLoaderRoute: typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/inventory-management/units/': {
      id: '/_app/organizations/$orgId/inventory-management/units/'
      path: '/organizations/$orgId/inventory-management/units'
      fullPath: '/organizations/$orgId/inventory-management/units'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/inventory-management/products/': {
      id: '/_app/organizations/$orgId/inventory-management/products/'
      path: '/organizations/$orgId/inventory-management/products'
      fullPath: '/organizations/$orgId/inventory-management/products'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/inventory-management/products-categories/': {
      id: '/_app/organizations/$orgId/inventory-management/products-categories/'
      path: '/organizations/$orgId/inventory-management/products-categories'
      fullPath: '/organizations/$orgId/inventory-management/products-categories'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/inventory-management/brands/': {
      id: '/_app/organizations/$orgId/inventory-management/brands/'
      path: '/organizations/$orgId/inventory-management/brands'
      fullPath: '/organizations/$orgId/inventory-management/brands'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/expense-management/expense-categories/': {
      id: '/_app/organizations/$orgId/expense-management/expense-categories/'
      path: '/organizations/$orgId/expense-management/expense-categories'
      fullPath: '/organizations/$orgId/expense-management/expense-categories'
      preLoaderRoute: typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/expense-management/all-expenses/': {
      id: '/_app/organizations/$orgId/expense-management/all-expenses/'
      path: '/organizations/$orgId/expense-management/all-expenses'
      fullPath: '/organizations/$orgId/expense-management/all-expenses'
      preLoaderRoute: typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/accounts-management/bank-accounts/': {
      id: '/_app/organizations/$orgId/accounts-management/bank-accounts/'
      path: '/organizations/$orgId/accounts-management/bank-accounts'
      fullPath: '/organizations/$orgId/accounts-management/bank-accounts'
      preLoaderRoute: typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/accounts-management/adjustments/': {
      id: '/_app/organizations/$orgId/accounts-management/adjustments/'
      path: '/organizations/$orgId/accounts-management/adjustments'
      fullPath: '/organizations/$orgId/accounts-management/adjustments'
      preLoaderRoute: typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/accounts-management/statements/$accountId': {
      id: '/_app/organizations/$orgId/accounts-management/statements/$accountId'
      path: '/organizations/$orgId/accounts-management/statements/$accountId'
      fullPath: '/organizations/$orgId/accounts-management/statements/$accountId'
      preLoaderRoute: typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId': {
      id: '/_app/organizations/$orgId/inventory-management/products/product-edit/$productId'
      path: '/organizations/$orgId/inventory-management/products/product-edit/$productId'
      fullPath: '/organizations/$orgId/inventory-management/products/product-edit/$productId'
      preLoaderRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppOrganizationsOrgIdIndexLazyRoute: typeof AppOrganizationsOrgIdIndexLazyRoute
  AppOrganizationsOrgIdTaskManagementIndexRoute: typeof AppOrganizationsOrgIdTaskManagementIndexRoute
  AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute: typeof AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute
  AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute: typeof AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute
  AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute: typeof AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute
  AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute: typeof AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute
  AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute: typeof AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute
  AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute: typeof AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute
  AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute: typeof AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute
  AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute: typeof AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute
  AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute: typeof AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppOrganizationsOrgIdIndexLazyRoute: AppOrganizationsOrgIdIndexLazyRoute,
  AppOrganizationsOrgIdTaskManagementIndexRoute:
    AppOrganizationsOrgIdTaskManagementIndexRoute,
  AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute:
    AppOrganizationsOrgIdAccountsManagementStatementsAccountIdLazyRoute,
  AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute:
    AppOrganizationsOrgIdAccountsManagementAdjustmentsIndexLazyRoute,
  AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute:
    AppOrganizationsOrgIdAccountsManagementBankAccountsIndexLazyRoute,
  AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute:
    AppOrganizationsOrgIdExpenseManagementAllExpensesIndexLazyRoute,
  AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute:
    AppOrganizationsOrgIdExpenseManagementExpenseCategoriesIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementBrandsIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementProductsCategoriesIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementProductsIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute:
    AppOrganizationsOrgIdInventoryManagementUnitsIndexLazyRoute,
  AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute:
    AppOrganizationsOrgIdOrdersManagementAllOrdersIndexLazyRoute,
  AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute:
    AppOrganizationsOrgIdOrdersManagementPosSaleIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsApiCredentialsIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsGeneralIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsMembersIndexLazyRoute,
  AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute:
    AppOrganizationsOrgIdOrganizationSettingsPlanFeaturesIndexLazyRoute,
  AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute:
    AppOrganizationsOrgIdInventoryManagementProductsProductEditProductIdLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegistrationRoute: AuthRegistrationRoute,
  AuthVerifyLoginRoute: AuthVerifyLoginRoute,
  OrganizationsCreateOrganizationRoute: OrganizationsCreateOrganizationRoute,
  OrganizationsIndexRoute: OrganizationsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
